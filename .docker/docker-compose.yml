version: '2'
services:

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8090:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'

  zookeeper:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    container_name: sn-zookeeper

  kafka:
    image: confluentinc/cp-kafka:${CP_VERSION}
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    container_name: sn-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,PLAINTEXT_REMOTE://192.168.100.28:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_REMOTE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:${CP_VERSION}
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    container_name: sn-schema-registry
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:29092'

  application:
    image: fenix3009/cyberplanta:latest
    ports:
      - "8082:8082"
    environment:
      LOGDNA_LOG_DIRS: '/var/log/mykafka'
      LOGDNA_TAGS: 'prod,docker,demo'
      LOGDNA_INCLUSION_RULES: '*.json'
      LOGDNA_IP: '187.188.227.113'
    depends_on:
      - kafka
      - zookeeper
      - schema-registry
      - mongo

  logdna:
    image: logdna/logspout:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      LOGDNA_KEY: ${INGEST_KEY}
      FILTER_NAME: "mykafka-application-1"
      TAGS: "docker,dev,cyberplanta"
    depends_on:
      - application
